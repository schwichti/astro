/*
 * LH Public API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.AirportNames;
import io.swagger.client.model.AirportPosition;
import java.io.IOException;

/**
 * Array of all available airports or one airport matching the request.
 */
@ApiModel(description = "Array of all available airports or one airport matching the request.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-05-15T18:51:54.877+02:00")
public class Airport {
  @SerializedName("AirportCode")
  private String airportCode = null;

  @SerializedName("Position")
  private AirportPosition position = null;

  @SerializedName("CityCode")
  private String cityCode = null;

  @SerializedName("CountryCode")
  private String countryCode = null;

  @SerializedName("LocationType")
  private String locationType = null;

  @SerializedName("Names")
  private AirportNames names = null;

  @SerializedName("UtcOffset")
  private Float utcOffset = null;

  @SerializedName("TimeZoneId")
  private String timeZoneId = null;

  public Airport airportCode(String airportCode) {
    this.airportCode = airportCode;
    return this;
  }

   /**
   * 3-letter IATA airport code, e.g. “TXL”.
   * @return airportCode
  **/
  @ApiModelProperty(value = "3-letter IATA airport code, e.g. “TXL”.")
  public String getAirportCode() {
    return airportCode;
  }

  public void setAirportCode(String airportCode) {
    this.airportCode = airportCode;
  }

  public Airport position(AirportPosition position) {
    this.position = position;
    return this;
  }

   /**
   * Get position
   * @return position
  **/
  @ApiModelProperty(value = "")
  public AirportPosition getPosition() {
    return position;
  }

  public void setPosition(AirportPosition position) {
    this.position = position;
  }

  public Airport cityCode(String cityCode) {
    this.cityCode = cityCode;
    return this;
  }

   /**
   * 3-letter IATA city code, e.g. “BER”.
   * @return cityCode
  **/
  @ApiModelProperty(value = "3-letter IATA city code, e.g. “BER”.")
  public String getCityCode() {
    return cityCode;
  }

  public void setCityCode(String cityCode) {
    this.cityCode = cityCode;
  }

  public Airport countryCode(String countryCode) {
    this.countryCode = countryCode;
    return this;
  }

   /**
   * 2-letter ISO 3166-1 country code, e.g. “DE”.
   * @return countryCode
  **/
  @ApiModelProperty(value = "2-letter ISO 3166-1 country code, e.g. “DE”.")
  public String getCountryCode() {
    return countryCode;
  }

  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }

  public Airport locationType(String locationType) {
    this.locationType = locationType;
    return this;
  }

   /**
   *  “Airport”, “RailwayStation” or “BusStation”.
   * @return locationType
  **/
  @ApiModelProperty(value = " “Airport”, “RailwayStation” or “BusStation”.")
  public String getLocationType() {
    return locationType;
  }

  public void setLocationType(String locationType) {
    this.locationType = locationType;
  }

  public Airport names(AirportNames names) {
    this.names = names;
    return this;
  }

   /**
   * Get names
   * @return names
  **/
  @ApiModelProperty(value = "")
  public AirportNames getNames() {
    return names;
  }

  public void setNames(AirportNames names) {
    this.names = names;
  }

  public Airport utcOffset(Float utcOffset) {
    this.utcOffset = utcOffset;
    return this;
  }

   /**
   * Hour offset of airport to UTC time zone
   * @return utcOffset
  **/
  @ApiModelProperty(value = "Hour offset of airport to UTC time zone")
  public Float getUtcOffset() {
    return utcOffset;
  }

  public void setUtcOffset(Float utcOffset) {
    this.utcOffset = utcOffset;
  }

  public Airport timeZoneId(String timeZoneId) {
    this.timeZoneId = timeZoneId;
    return this;
  }

   /**
   * Time zone name airport is in
   * @return timeZoneId
  **/
  @ApiModelProperty(value = "Time zone name airport is in")
  public String getTimeZoneId() {
    return timeZoneId;
  }

  public void setTimeZoneId(String timeZoneId) {
    this.timeZoneId = timeZoneId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Airport airport = (Airport) o;
    return Objects.equals(this.airportCode, airport.airportCode) &&
        Objects.equals(this.position, airport.position) &&
        Objects.equals(this.cityCode, airport.cityCode) &&
        Objects.equals(this.countryCode, airport.countryCode) &&
        Objects.equals(this.locationType, airport.locationType) &&
        Objects.equals(this.names, airport.names) &&
        Objects.equals(this.utcOffset, airport.utcOffset) &&
        Objects.equals(this.timeZoneId, airport.timeZoneId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(airportCode, position, cityCode, countryCode, locationType, names, utcOffset, timeZoneId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Airport {\n");
    
    sb.append("    airportCode: ").append(toIndentedString(airportCode)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    cityCode: ").append(toIndentedString(cityCode)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    locationType: ").append(toIndentedString(locationType)).append("\n");
    sb.append("    names: ").append(toIndentedString(names)).append("\n");
    sb.append("    utcOffset: ").append(toIndentedString(utcOffset)).append("\n");
    sb.append("    timeZoneId: ").append(toIndentedString(timeZoneId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

